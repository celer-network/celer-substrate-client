import { ApiPromise } from '@polkadot/api';
import { SignedSimplexStateArray, PayIdList, VouchedCondPayResultOf, ResolvePaymentConditionsRequestOf, CooperativeSettleRequestOf } from 'celer-substrate-types';
import { bool } from '@polkadot/types';
export declare function setBalanceLimits(api: ApiPromise, _caller: string, channelId: string, limits: number): Promise<void>;
export declare function disableBalanceLimits(api: ApiPromise, _caller: string, channelId: string): Promise<void>;
export declare function enableBalanceLimits(api: ApiPromise, _caller: string, channelId: string): Promise<void>;
export declare function openChannel(api: ApiPromise, _caller: string, zeroTotalDeposit?: boolean, msgValue?: number, balanceLimitsEnabled?: boolean, balanceLimits?: number, channelPeerBalance0?: number, channelPeerBalance1?: number, openDeadline?: number, disputeTimeout?: number, msgValueReceiver?: number): Promise<string>;
export declare function deposit(api: ApiPromise, _caller: string, channelId: string, _receiver: string, msgValue: number, transferFromAmount: number): Promise<void>;
export declare function depositInBatch(api: ApiPromise, _caller: string, _channelIds: string[], _receivers: string[], _msgValues: number[], _transferFromAmounts: number[]): Promise<void>;
export declare function snapshotStates(api: ApiPromise, _caller: string, signedSimplexStateArray: SignedSimplexStateArray): Promise<void>;
export declare function intendWithdraw(api: ApiPromise, _caller: string, channelId: string, amount: number, isZeroHash?: boolean, recipientChannelId?: string): Promise<void>;
export declare function confirmWithdraw(api: ApiPromise, _caller: string, channelId: string): Promise<void>;
export declare function vetoWithdraw(api: ApiPromise, _caller: string, channelId: string): Promise<void>;
export declare function cooperativeWithdraw(api: ApiPromise, _caller: string, channelId: string, seqNum: number, amount: number, _receiverAccount: string, withdrawDeadline?: number, isZeroHash?: boolean, recipientChannelId?: string): Promise<void>;
export declare function intendSettle(api: ApiPromise, _caller: string, signedSimplexStateArray: SignedSimplexStateArray): Promise<void>;
export declare function clearPays(api: ApiPromise, _caller: string, channelId: string, _peerFrom: string, payIdList: PayIdList): Promise<void>;
export declare function confirmSettle(api: ApiPromise, _caller: string, channelId: string): Promise<void>;
export declare function cooperativeSettle(api: ApiPromise, _caller: string, settleRequest: CooperativeSettleRequestOf): Promise<void>;
export declare function depositPool(api: ApiPromise, _caller: string, _receiver: string, amount: number): Promise<void>;
export declare function withdrawFromPool(api: ApiPromise, _caller: string, value: number): Promise<void>;
export declare function approve(api: ApiPromise, _caller: string, _spender: string, value: number): Promise<void>;
export declare function transferFrom(api: ApiPromise, _caller: string, _from: string, _to: string, value: number): Promise<void>;
export declare function increaseAllowance(api: ApiPromise, _caller: string, _spender: string, addedValue: number): Promise<void>;
export declare function decreaseAllowance(api: ApiPromise, _caller: string, _spender: string, subtractedValue: number): Promise<void>;
export declare function resolvePaymentByConditions(api: ApiPromise, _caller: string, resolvePayRequest: ResolvePaymentConditionsRequestOf): Promise<void>;
export declare function resolvePaymentByVouchedResult(api: ApiPromise, _caller: string, voucehdPayResult: VouchedCondPayResultOf): Promise<void>;
export declare function getCelerLedgerId(api: ApiPromise): Promise<string>;
export declare function getSettleFinalizedTime(api: ApiPromise, channelId: string): Promise<number>;
export declare function getChannelStatus(api: ApiPromise, channelId: string): Promise<number>;
export declare function getCooperativeWithdrawSeqNum(api: ApiPromise, channelId: string): Promise<number>;
export declare function getTotalBalance(api: ApiPromise, channelId: string): Promise<number>;
export declare function getBalanceMap(api: ApiPromise, channelId: string): Promise<[string[], number[], number[]]>;
export declare function getDisputeTimeOut(api: ApiPromise, channelId: string): Promise<number>;
export declare function getStateSeqNumMap(api: ApiPromise, channelId: string): Promise<[string[], number[]]>;
export declare function getTransferOutMap(api: ApiPromise, channelId: string): Promise<[string[], number[]]>;
export declare function getNextPayIdListHashMap(api: ApiPromise, channelId: string): Promise<[string[], string[]]>;
export declare function getLastPayResolveDeadlineMap(api: ApiPromise, channelId: string): Promise<[string[], number[]]>;
export declare function getPendingPayOutMap(api: ApiPromise, channelId: string): Promise<[string[], number[]]>;
export declare function getWithdrawIntent(api: ApiPromise, channelId: string): Promise<[string, number, number, string]>;
export declare function getChannelStatusNum(api: ApiPromise, channelStatus: number): Promise<number>;
export declare function getBalanceLimits(api: ApiPromise, channelId: string): Promise<number>;
export declare function getBalanceLimitsEnabled(api: ApiPromise, channelId: string): Promise<bool>;
export declare function getPeersMigrationInfo(api: ApiPromise, channelId: string): Promise<[string[], number[], number[], number[], number[], number[]]>;
export declare function getCelerWalletId(api: ApiPromise): Promise<string>;
export declare function getWalletOwners(api: ApiPromise, walletId: string): Promise<string[]>;
export declare function getPoolId(api: ApiPromise): Promise<string>;
export declare function getAllowance(api: ApiPromise, owner: string, spender: string): Promise<number>;
export declare function getPayResolverId(api: ApiPromise): Promise<string>;
export declare function calculatePayId(api: ApiPromise, payHash: string): Promise<string>;
export declare function emitCelerLedgerId(api: ApiPromise): Promise<void>;
export declare function emitChannelInfo(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitSettleFinalizedTime(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitCooperativeWithdrawSeqNum(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitTotalBalance(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitBalanceMap(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitDisputeTimeOut(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitStateSeqNumMap(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitTransferOutMap(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitNextPayIdListHashMap(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitLastPayResolveDeadlineMap(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitPendingPayOutMap(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitWithdrawIntent(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitChannelStatusNum(api: ApiPromise, channelStatus: number): Promise<void>;
export declare function emitPeersMigrationInfo(api: ApiPromise, channelId: string): Promise<void>;
export declare function emitCelerWalletId(api: ApiPromise): Promise<void>;
export declare function emitWalletInfo(api: ApiPromise, walletId: string): Promise<void>;
export declare function emitPoolId(api: ApiPromise): Promise<void>;
export declare function emitPoolBalance(api: ApiPromise, _owner: string): Promise<void>;
export declare function emitAllowance(api: ApiPromise, _owner: string, _spender: string): Promise<void>;
export declare function emitPayResolverId(api: ApiPromise): Promise<void>;
