"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const connect_1 = require("../src/connect");
const funcs_1 = require("../src/funcs");
const utils_1 = require("../src/utils");
async function main() {
    const api = await connect_1.connect();
    console.log("===================== open channel with total balance is zero ===============");
    const channelId1 = await funcs_1.openChannel(api, 'alice', true, 0);
    await utils_1.waitBlockNumber(2);
    await funcs_1.emitChannelInfo(api, channelId1);
    await funcs_1.emitBalanceMap(api, channelId1);
    console.log("\n", "==================================== disable balance limits ==============================");
    await funcs_1.disableBalanceLimits(api, 'alice', channelId1);
    await utils_1.waitBlockNumber(2);
    console.log("\n", "==================================== enable balance limits ===============================");
    await funcs_1.enableBalanceLimits(api, 'alice', channelId1);
    await utils_1.waitBlockNumber(2);
    console.log("\n", "==================================== set balance limits ====================================");
    await funcs_1.setBalanceLimits(api, 'alice', channelId1, 10000);
    await utils_1.waitBlockNumber(2);
    console.log("\n", "======================== open channel with deposits [1000, 2000] ===========================");
    await funcs_1.depositPool(api, 'alice', 'alice', 20000);
    await utils_1.waitBlockNumber(2);
    await funcs_1.approve(api, 'alice', 'celerLedgerId', 20000);
    await utils_1.waitBlockNumber(2);
    const channelId2 = await funcs_1.openChannel(api, 'bob', false, 1000);
    await utils_1.waitBlockNumber(2);
    await funcs_1.emitChannelInfo(api, channelId2);
    await funcs_1.emitPeersMigrationInfo(api, channelId2);
    console.log("\n", "================================== deposit to channel =================================================");
    await funcs_1.deposit(api, 'alice', channelId1, 'bob', 1000, 100);
    await utils_1.waitBlockNumber(2);
    await funcs_1.emitWalletInfo(api, channelId1);
    await funcs_1.depositInBatch(api, 'alice', [channelId1, channelId2], ['bob', 'alice'], [1000, 1000], [100, 100]);
    await utils_1.waitBlockNumber(2);
    await funcs_1.emitWalletInfo(api, channelId1);
    await funcs_1.emitPeersMigrationInfo(api, channelId1);
    await funcs_1.emitWalletInfo(api, channelId2);
    await funcs_1.emitPeersMigrationInfo(api, channelId2);
    process.exit(0);
}
main();
